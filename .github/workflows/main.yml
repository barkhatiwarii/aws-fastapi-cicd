# This is a basic workflow to help you get started with Actions

name: CICD pipeline

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  continuous-integration:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2

      - name: Set up Python all python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64

      - name: Install Python Virtual ENV
        run: pip install virtualenv

      - name: Install Dependencies into Virtual env
        run: python -m venv venv  
        
      - name: Activate Virtual env
        run: venv/bin/activate 

      # Install all the app dependencies  
      - name: Install dependencies
        run: pip install -r requirements.txt


      
      - name: Create Zipfile archive of Dependencies
        run: |
          cd ./venv/lib/python3.7/site-packages
          zip -r9 ../../../../main.zip .

      - name: Add App to Zipfile
        run: zip -g main.zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: main
          path: main.zip     
          

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Download Lambda main.zip
        uses: actions/download-artifact@v2
        with:
          name: main

      - name: Upload to S3
        run: aws s3 cp main.zip s3://fastapi-cicd/main.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name fastapi-cicd --s3-bucket fastapi-cicd --s3-key main.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

